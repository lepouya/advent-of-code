// https://adventofcode.com/2022/day/15/input

// 1
((tunnels)=>(y)=>[...Array(tunnels.bounds.right-tunnels.bounds.left+1).keys()].reduce((cover,x)=>cover+(tunnels.beacons.every(({x:bx,y:by})=>x+tunnels.bounds.left!=bx||y!=by) && tunnels.sensors.find(({x:sx,y:sy,r})=>r>=Math.abs(x+tunnels.bounds.left-sx)+Math.abs(y-sy))?1:0), 0))([...document.body.innerText.matchAll(/^.+?(-?\d+).+?(-?\d+).+?(-?\d+).+?(-?\d+)$/gm)].map(l=>[...l.map(c=>parseInt(c)),Math.abs(l[1]-l[3])+Math.abs(l[2]-l[4])]).reduce(({sensors,beacons,bounds},[_,sx,sy,bx,by,r])=> ({sensors:[...sensors,{x:sx,y:sy,r}], beacons:[...beacons,{x:bx,y:by}], bounds:{left:Math.min(bounds.left??sx,sx-r), right:Math.max(bounds.right??sx,sx+r), top:Math.min(bounds.top??sy,sy-r), bottom:Math.max(bounds.bottom??sy,sy+r)}}), {sensors:[],beacons:[],bounds:{}}))(2000000) 

// 2
// incomplete
(({sensors,beacons,bounds})=>(size)=> [...Array(size+1).keys()].map((row)=> sensors.map(({x,y,r})=>Math.abs(y-row)>r?[]:[x-r+Math.abs(y-row),x+r-Math.abs(y-row)]).filter(i=>i&&i[0]).sort(([s1,e1],[s2,e2])=>s2-s1).reduce((ints,xs)=> ints.push(ints.reduce((adding,current)=> Math.max(current[0],adding[0])<=Math.min(current[1],adding[1])?current.splice(0,2,Math.min(current[0],adding[0]),Math.max(current[1],adding[1]))&&[]:adding, xs))&&ints, []).filter(i=>i&&i[0])))([...sample.matchAll(/^.+?(-?\d+).+?(-?\d+).+?(-?\d+).+?(-?\d+)$/gm)].map(l=>[...l.map(c=>parseInt(c)),Math.abs(l[1]-l[3])+Math.abs(l[2]-l[4])]).reduce(({sensors,beacons,bounds},[_,sx,sy,bx,by,r])=> ({sensors:[...sensors,{x:sx,y:sy,r}], beacons:[...beacons,{x:bx,y:by}], bounds:{left:Math.min(bounds.left??sx,sx-r), right:Math.max(bounds.right??sx,sx+r), top:Math.min(bounds.top??sy,sy-r), bottom:Math.max(bounds.bottom??sy,sy+r)}}), {sensors:[],beacons:[],bounds:{}}))(20) 
